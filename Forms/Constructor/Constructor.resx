<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rbCashCounter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>